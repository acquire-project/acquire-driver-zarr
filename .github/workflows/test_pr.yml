name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - multi-language-api

env:
  BUILD_TYPE: Release

jobs:
  test:
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        platform:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
        include:
          - platform: "ubuntu-latest"
            vcpkg_triplet: "x64-linux"
          - platform: "windows-latest"
            vcpkg_triplet: "x64-windows-static"
          - platform: "macos-latest"
            vcpkg_triplet: "arm64-osx"
    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg && ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=${{github.workspace}}/vcpkg" >> $GITHUB_ENV
          echo "${{github.workspace}}/vcpkg" >> $GITHUB_PATH
          ./vcpkg integrate install
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U pybind11 libpython pytest

      - name: Configure CMake
        run: |
          cmake --preset=default -DVCPKG_TARGET_TRIPLET=${{matrix.vcpkg_triplet}}
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DACQUIRE_BUILD_API_PY=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test Acquire Driver Zarr
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} -L acquire-driver-zarr --output-on-failure

      - name: Test Python API
        run: ctest -C ${{env.BUILD_TYPE}} -L acquire-zarr-python-api --output-on-failure
